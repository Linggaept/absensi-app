import 'package:flutter/material.dart';
import 'package:absensi/common/models/teacher_model.dart';
import 'package:absensi/common/constants/app_colors.dart';

class AddEditTeacherPage extends StatefulWidget {
  final Teacher? teacher;

  const AddEditTeacherPage({super.key, this.teacher});

  @override
  State<AddEditTeacherPage> createState() => _AddEditTeacherPageState();
}

class _AddEditTeacherPageState extends State<AddEditTeacherPage> {
  final _formKey = GlobalKey<FormState>();
  late TextEditingController _fullNameController;
  late TextEditingController _nipController;
  late TextEditingController _emailController;
  late TextEditingController _subjectController;
  late TextEditingController _phoneController;
  late TextEditingController _passwordController;
  bool _isEditMode = false;

  @override
  void initState() {
    super.initState();
    _isEditMode = widget.teacher != null;
    _fullNameController = TextEditingController(text: widget.teacher?.fullName ?? '');
    _nipController = TextEditingController(text: widget.teacher?.nip ?? '');
    _emailController = TextEditingController(text: widget.teacher?.email ?? '');
    _subjectController = TextEditingController(text: widget.teacher?.subject ?? '');
    _phoneController = TextEditingController(text: widget.teacher?.phoneNumber ?? '');
    _passwordController = TextEditingController();
  }

  @override
  void dispose() {
    _fullNameController.dispose();
    _nipController.dispose();
    _emailController.dispose();
    _subjectController.dispose();
    _phoneController.dispose();
    _passwordController.dispose();
    super.dispose();
  }

  void _saveForm() {
    if (_formKey.currentState!.validate()) {
      final teacherData = Teacher(
        id: widget.teacher?.id ?? '', // ID will be generated by service if new
        fullName: _fullNameController.text,
        nip: _nipController.text,
        email: _emailController.text,
        subject: _subjectController.text,
        phoneNumber: _phoneController.text,
        password: _passwordController.text.isNotEmpty ? _passwordController.text : null,
      );
      Navigator.of(context).pop(teacherData);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: AppColors.primary,
        title: Text(widget.teacher == null ? 'Tambah Guru' : 'Edit Guru',
            style: const TextStyle(color: AppColors.white, fontWeight: FontWeight.bold)),
      ),
      body: SingleChildScrollView(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.stretch,
            children: [
              TextFormField(
                controller: _fullNameController,
                decoration: const InputDecoration(labelText: 'Nama Lengkap'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Nama tidak boleh kosong';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _nipController,
                decoration: const InputDecoration(labelText: 'NIP (Nomor Induk Pegawai)'),
                keyboardType: TextInputType.number,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'NIP tidak boleh kosong';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _emailController,
                decoration: const InputDecoration(labelText: 'Email'),
                keyboardType: TextInputType.emailAddress,
                validator: (value) {
                  if (value == null || value.isEmpty || !value.contains('@')) {
                    return 'Masukkan email yang valid';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _subjectController,
                decoration: const InputDecoration(labelText: 'Mata Kuliah'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Mata kuliah tidak boleh kosong';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _phoneController,
                decoration: const InputDecoration(labelText: 'Nomor Handphone'),
                keyboardType: TextInputType.phone,
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Nomor handphone tidak boleh kosong';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 16),
              TextFormField(
                controller: _passwordController,
                decoration: InputDecoration(
                  labelText: 'Password',
                  hintText: _isEditMode ? 'Kosongkan jika tidak ingin mengubah' : null,
                ),
                obscureText: true,
                validator: (value) {
                  if (!_isEditMode && (value == null || value.isEmpty)) {
                    return 'Password tidak boleh kosong';
                  }
                  return null;
                },
              ),
              const SizedBox(height: 24),
              ElevatedButton(onPressed: _saveForm, style: ElevatedButton.styleFrom(padding: const EdgeInsets.symmetric(vertical: 16)), child: const Text('Simpan')),
            ],
          ),
        ),
      ),
    );
  }
}